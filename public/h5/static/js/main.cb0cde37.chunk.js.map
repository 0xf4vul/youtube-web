{"version":3,"sources":["utils/http.ts","Video.tsx","Login.tsx","VideoPlayer.tsx","Play.tsx","App.tsx","index.tsx"],"names":["get","url","params","Promise","resolve","reject","axios","then","res","data","catch","err","post","QS","stringify","defaults","baseURL","timeout","headers","interceptors","request","use","config","error","response","status","ChannelType","Login","state","token","onFinish","values","username","localStorage","setItem","isManager","setState","message","e","console","log","getItem","this","to","tailLayout","wrapperCol","offset","span","className","labelCol","name","initialValues","remember","Item","label","rules","required","type","htmlType","Component","Video","props","left_drawer_visible","list_type","list","channel_list","channel","videos","current_channel_id","page","current","total","count","page_title","sort","channel_modal_visible","add_channel_power","add_channel_inpu_id","video_dom","getVideoList","getVideos","id","current_page","current_sort","current_type","refresh","get_page","undefined","Object","assign","length","showLeftDrawer","hideLeftDrawer","rootMenuKeys","handleMenuOpenChange","key","open_keys","menu_keys","latestOpenKey","find","k","indexOf","handleMenuClick","item","data_title","video_id","index","findIndex","dom","window","scrollTo","srcoll","storageScrollTop","handleScroll","onPageChange","onSortChange","JSON","getPageStorage","storagePageInfo","parse","storageVideoId","event","scrollTop","pageYOffset","document","documentElement","body","i","isPlay","played","video_played","logout","removeItem","location","reload","handlePlayClick","title","video_palyed","push","history","pathname","handleAddChange","handleAddChannelOk","success","warning","msg","handleAddChannelCancel","listUpdate","addEventListener","current_t","o","getElementsByClassName","doms","getOffsetTop","removeEventListener","obj","offsetTop","offsetParent","Meta","Card","SubMenu","Menu","pageHeaderExtra","onClick","shape","icon","CloudSyncOutlined","onBack","subTitle","ghost","backIcon","BarsOutlined","extra","placement","closable","onClose","visible","mode","openKeys","onOpenChange","style","width","ProfileOutlined","map","v","data-title","ReadOutlined","gutter","md","xl","sm","cover","alt","src","thumbnail","actions","description","created_at","onChange","defaultPageSize","showSizeChanger","onOk","onCancel","placeholder","target","value","withRouter","VideoPlayer","player","videoNode","videojs","ready","dispose","data-vjs-player","ref","node","React","Play","videoOptions","videoType","autoplay","controls","sources","Title","Typography","goBack","level","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.cb0cde37.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport QS from \"qs\";\r\n\r\nif (process.env.NODE_ENV === \"development\") {\r\n  axios.defaults.baseURL = \"/api\";\r\n} else if (process.env.NODE_ENV === \"production\") {\r\n  axios.defaults.baseURL = \"/api\";\r\n}\r\n\r\naxios.defaults.timeout = 10000;\r\naxios.defaults.headers.post[\"Content-Type\"] =\r\n  \"application/x-www-form-urlencoded;charset=UTF-8\";\r\naxios.interceptors.request.use(\r\n  (config: any) => {\r\n    return config;\r\n  },\r\n  (error: any) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(\r\n  (response: any) => {\r\n    if (response.status === 200) {\r\n      return Promise.resolve(response);\r\n    } else {\r\n      return Promise.reject(response);\r\n    }\r\n  },\r\n  (error: any) => {\r\n    if (error.response.status) {\r\n      return Promise.reject(error.response);\r\n    }\r\n  }\r\n);\r\nexport function get(url: string, params: object) {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .get(url, {\r\n        params: params,\r\n      })\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err.data);\r\n      });\r\n  });\r\n}\r\nexport function post(url: string, params: object) {\r\n  return new Promise((resolve, reject) => {\r\n    axios\r\n      .post(url, QS.stringify(params))\r\n      .then((res) => {\r\n        resolve(res.data);\r\n      })\r\n      .catch((err) => {\r\n        reject(err.data);\r\n      });\r\n  });\r\n}\r\n","import React, { Component, ReactNode } from \"react\";\r\nimport \"./style.css\";\r\nimport {\r\n  PageHeader,\r\n  Drawer,\r\n  List,\r\n  Avatar,\r\n  Card,\r\n  Button,\r\n  Pagination,\r\n  Affix,\r\n  BackTop,\r\n  Modal,\r\n  Input,\r\n  message,\r\n  Row,\r\n  Col,\r\n  Menu,\r\n} from \"antd\";\r\nimport { get, post } from \"./utils/http\";\r\nimport {\r\n  BarsOutlined,\r\n  CloudSyncOutlined,\r\n  ReadOutlined,\r\n  ProfileOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Redirect, withRouter, RouteComponentProps } from \"react-router-dom\";\r\n\r\nenum ChannelType {\r\n  \"list\" = \"list\",\r\n  \"channel\" = \"channel\",\r\n}\r\ninterface VideoListInfo {\r\n  title: string;\r\n  id: string;\r\n  thumbnail: string;\r\n}\r\n\r\ninterface VideoList {\r\n  [key: string]: VideoListInfo[];\r\n}\r\n\r\ninterface Videos {\r\n  title: string;\r\n  id: string;\r\n  thumbnail: string;\r\n  created_at: string;\r\n}\r\n\r\ninterface Page {\r\n  current: number;\r\n  total: number;\r\n  count: number;\r\n}\r\n\r\ninterface State {\r\n  left_drawer_visible: boolean; // 左侧的抽屉\r\n  list_type: ChannelType; // 视频列表类型 enum[channel,list]，也控制左侧菜单的展开\r\n  channel_list: VideoList; // 频道列表\r\n  videos: Videos[]; // 视频列表\r\n  current_channel_id: string; // 当前的频道列表\r\n  token: string; // TOKEN\r\n  page: Page; // 页码\r\n  page_title: string; // 页标题\r\n  sort: number; // 排序\r\n  channel_modal_visible: boolean; // 添加频道的Modal\r\n  add_channel_power: boolean; // 添加频道的权限\r\n  add_channel_inpu_id: \"\"; // 添加频道的ID\r\n}\r\n\r\ninterface Dom {\r\n  id: string;\r\n  srcoll: number;\r\n}\r\n\r\ninterface PageInfo {\r\n  current_channel_id: string;\r\n  current_page: number;\r\n  sort: number;\r\n  list_type: ChannelType;\r\n}\r\n\r\ninterface VisitedVideo {\r\n  id: string;\r\n}\r\n\r\nclass Video extends Component<RouteComponentProps> {\r\n  state: State = {\r\n    token: \"\",\r\n    left_drawer_visible: false,\r\n    list_type: ChannelType.list,\r\n    channel_list: {\r\n      list: [],\r\n      channel: [],\r\n    },\r\n    videos: [],\r\n    current_channel_id: \"\",\r\n    page: {\r\n      current: 1,\r\n      total: 1,\r\n      count: 1,\r\n    },\r\n    page_title: \"\",\r\n    sort: 1,\r\n    channel_modal_visible: false,\r\n    add_channel_power: false,\r\n    add_channel_inpu_id: \"\",\r\n  };\r\n\r\n  constructor(props: RouteComponentProps) {\r\n    super(props);\r\n  }\r\n\r\n  // 存储视频列表各自ID及ScrollTop\r\n  video_dom: Dom[] = [];\r\n\r\n  async componentDidMount() {\r\n    // 监听滚动\r\n    window.addEventListener(\"scroll\", this.handleScroll);\r\n    const token = localStorage.getItem(\"token\") || \"\";\r\n    const isManager = localStorage.getItem(\"isManager\") || \"0\";\r\n    const add_channel_power = isManager == \"1\" ? true : false;\r\n    if (token) {\r\n      await this.getVideoList().then((data: any) => {\r\n        const channel_list = data;\r\n        let {\r\n          current_channel_id,\r\n          current_page,\r\n          sort,\r\n          list_type,\r\n        } = this.getPageStorage();\r\n        let page_title = \"\";\r\n        console.log(list_type, channel_list);\r\n        if (!current_channel_id && channel_list[list_type].length) {\r\n          current_channel_id = channel_list[list_type][0].id;\r\n          page_title = channel_list[list_type][0].title;\r\n        } else if (channel_list[list_type].length) {\r\n          const current_t = channel_list[list_type].find(\r\n            (o: any) => o.id === current_channel_id\r\n          );\r\n          if (current_t && current_t.title) {\r\n            page_title = current_t.title;\r\n          }\r\n        }\r\n        console.log(\"call getVideos\");\r\n        this.getVideos(current_channel_id, current_page, sort, list_type).then(\r\n          (data: any) => {\r\n            console.log(data);\r\n            this.setState({\r\n              channel_list: channel_list,\r\n              videos: data.list,\r\n              page: data.page,\r\n              current_channel_id: current_channel_id,\r\n              page_title: page_title,\r\n              add_channel_power: add_channel_power,\r\n              list_type: list_type,\r\n            });\r\n            const video_id = localStorage.getItem(\"video_id\");\r\n            if (video_id) {\r\n              const index = this.video_dom.findIndex((dom: Dom) => {\r\n                return dom.id === video_id;\r\n              });\r\n              if (index !== -1) {\r\n                window.scrollTo(0, this.video_dom[index].srcoll - 74);\r\n              }\r\n            }\r\n            this.storageScrollTop();\r\n            this.handleScroll(\"event\");\r\n          }\r\n        );\r\n      });\r\n    }\r\n  }\r\n  componentDidUpdate() {\r\n    const dom = document.getElementsByClassName(\"video_card\");\r\n    let doms: Dom[] = [];\r\n    for (let i = 0; i < dom.length; i++) {\r\n      doms.push({\r\n        id: dom[i].id,\r\n        srcoll: this.getOffsetTop(dom[i]),\r\n      });\r\n    }\r\n    this.video_dom = doms;\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"scroll\", this.handleScroll);\r\n  }\r\n\r\n  getVideoList = () => {\r\n    const token = localStorage.getItem(\"token\") || \"\";\r\n    return get(\"/video_list\", { token: token }).then((data: any) => {\r\n      if (data.status) {\r\n        return data.data;\r\n      } else {\r\n        return [];\r\n      }\r\n    });\r\n  };\r\n\r\n  getVideos = (\r\n    id?: string,\r\n    current_page?: number,\r\n    current_sort?: number | null,\r\n    current_type?: ChannelType | null,\r\n    refresh?: boolean\r\n  ) => {\r\n    const token = localStorage.getItem(\"token\") || \"\";\r\n    let { current_channel_id, page, sort, list_type } = this.state;\r\n    if (id) {\r\n      current_channel_id = id;\r\n    }\r\n    let get_page = page.current;\r\n    if (current_page) {\r\n      get_page = current_page;\r\n    }\r\n    if (current_sort !== undefined && current_sort !== null) {\r\n      sort = current_sort;\r\n    }\r\n    if (current_type) {\r\n      list_type = current_type;\r\n    }\r\n    let params = {\r\n      token: token,\r\n      id: current_channel_id,\r\n      page: get_page,\r\n      sort: sort,\r\n      type: list_type,\r\n    };\r\n    if (refresh) {\r\n      params = Object.assign(params, { refresh: true });\r\n    }\r\n    return get(\"/videos\", params).then((data: any) => {\r\n      if (data.status && data.data.list.length) {\r\n        return data.data;\r\n      } else {\r\n        return [];\r\n      }\r\n    });\r\n  };\r\n\r\n  showLeftDrawer = () => {\r\n    this.setState({\r\n      left_drawer_visible: true,\r\n    });\r\n  };\r\n\r\n  hideLeftDrawer = () => {\r\n    this.setState({\r\n      left_drawer_visible: false,\r\n    });\r\n  };\r\n\r\n  rootMenuKeys = [\"list\", \"channel\"];\r\n\r\n  handleMenuOpenChange = (key: any) => {\r\n    const { list_type } = this.state;\r\n    const open_keys = [list_type];\r\n    const menu_keys: ChannelType[] = [ChannelType.list, ChannelType.channel];\r\n    const latestOpenKey = key.find((k: any) => open_keys.indexOf(k) === -1);\r\n    if (menu_keys.indexOf(latestOpenKey) !== -1) {\r\n      this.setState({\r\n        list_type: latestOpenKey ? latestOpenKey : ChannelType.list,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleMenuClick = (e: any) => {\r\n    let { current_channel_id } = this.state;\r\n    if (e.key !== current_channel_id) {\r\n      current_channel_id = e.key;\r\n      const page_title = e.item.props.data_title;\r\n      this.getVideos(current_channel_id, 1, 1).then((data: any) => {\r\n        this.setState({\r\n          left_drawer_visible: false,\r\n          videos: data.list,\r\n          page: data.page,\r\n          current_channel_id: current_channel_id,\r\n          page_title: page_title,\r\n        });\r\n        const video_id = localStorage.getItem(\"video_id\");\r\n        if (video_id) {\r\n          const index = this.video_dom.findIndex((dom: Dom) => {\r\n            return dom.id === video_id;\r\n          });\r\n          if (index !== -1) {\r\n            window.scrollTo(0, this.video_dom[index].srcoll - 74);\r\n          } else {\r\n            window.scrollTo(0, 0);\r\n          }\r\n        }\r\n        this.storageScrollTop();\r\n        this.handleScroll(\"event\");\r\n      });\r\n    }\r\n  };\r\n\r\n  onPageChange = (page: number) => {\r\n    this.getVideos(\"\", page).then((data: any) => {\r\n      this.setState({\r\n        videos: data.list,\r\n        page: data.page,\r\n      });\r\n      this.storageScrollTop();\r\n    });\r\n  };\r\n\r\n  onSortChange = () => {\r\n    let { sort } = this.state;\r\n    sort = sort === 1 ? 0 : 1;\r\n    this.getVideos(\"\", 1, sort).then((data: any) => {\r\n      this.setState({\r\n        videos: data.list,\r\n        page: data.page,\r\n        sort: sort,\r\n      });\r\n      this.storageScrollTop();\r\n    });\r\n  };\r\n\r\n  // 记录当前访问\r\n  storageScrollTop = () => {\r\n    const { current_channel_id, page, sort, list_type } = this.state;\r\n    localStorage.setItem(\r\n      \"page_info\",\r\n      JSON.stringify({\r\n        id: current_channel_id,\r\n        page: page.current,\r\n        sort: sort,\r\n        list_type: list_type,\r\n      })\r\n    );\r\n  };\r\n  // 读取页面浏览信息\r\n  getPageStorage = () => {\r\n    const storagePageInfo = localStorage.getItem(\"page_info\") || \"\";\r\n    let page_info: PageInfo;\r\n    if (storagePageInfo) {\r\n      page_info = JSON.parse(storagePageInfo);\r\n    } else {\r\n      page_info = {\r\n        current_channel_id: \"\",\r\n        current_page: 1,\r\n        sort: 1,\r\n        list_type: ChannelType.list,\r\n      };\r\n    }\r\n    return page_info;\r\n  };\r\n  // 记录当前位置\r\n  storageVideoId = (id: string) => {\r\n    localStorage.setItem(\"video_id\", id);\r\n  };\r\n\r\n  getOffsetTop(obj: any) {\r\n    let offsetTop = 0;\r\n    while (obj != window.document.body && obj != null) {\r\n      offsetTop += obj.offsetTop;\r\n      obj = obj.offsetParent;\r\n    }\r\n    return offsetTop;\r\n  }\r\n\r\n  handleScroll = (event: any) => {\r\n    const scrollTop =\r\n      window.pageYOffset ||\r\n      document.documentElement.scrollTop ||\r\n      document.body.scrollTop;\r\n    const video_id = localStorage.getItem(\"video_id\");\r\n    for (let i = 0; i < this.video_dom.length; i++) {\r\n      if (this.video_dom[i].srcoll > scrollTop) {\r\n        if (this.video_dom[i].id != video_id) {\r\n          this.storageVideoId(this.video_dom[i].id);\r\n        }\r\n        break;\r\n      }\r\n    }\r\n  };\r\n\r\n  //是否已观看\r\n  isPlay: (id: string) => boolean = (id) => {\r\n    const played = localStorage.getItem(\"played\");\r\n    let video_played: string[] = [];\r\n    if (played) {\r\n      video_played = JSON.parse(played);\r\n    }\r\n    if (video_played.indexOf(id) === -1) {\r\n      return false;\r\n    } else {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  logout = () => {\r\n    localStorage.removeItem(\"token\");\r\n    this.setState({\r\n      token: \"\",\r\n    });\r\n    window.location.reload();\r\n  };\r\n\r\n  // 跳转\r\n  handlePlayClick: (id: string, type: string, title: string) => void = (\r\n    id,\r\n    type,\r\n    title\r\n  ) => {\r\n    // 记录已观看访问ID\r\n    const played = localStorage.getItem(\"played\");\r\n    let video_palyed: string[];\r\n    if (played) {\r\n      video_palyed = JSON.parse(played);\r\n      video_palyed.push(id);\r\n    } else {\r\n      video_palyed = [id];\r\n    }\r\n    localStorage.setItem(\"played\", JSON.stringify(video_palyed));\r\n    this.props.history.push({\r\n      pathname: \"/Play\",\r\n      state: {\r\n        id: id,\r\n        type: type,\r\n        title: title,\r\n      },\r\n    });\r\n  };\r\n\r\n  // 添加频道\r\n  handleAddChange = () => {\r\n    this.setState({\r\n      channel_modal_visible: true,\r\n    });\r\n  };\r\n  handleAddChannelOk = () => {\r\n    const { add_channel_inpu_id } = this.state;\r\n    const token = localStorage.getItem(\"token\") || \"\";\r\n    if (add_channel_inpu_id.length != 34 && add_channel_inpu_id.length != 24) {\r\n      message.error(\"错误的ID\");\r\n      return false;\r\n    }\r\n    post(\"/admin/channel_list\", { id: add_channel_inpu_id, token: token }).then(\r\n      (data: any) => {\r\n        if (data.status) {\r\n          message.success(\"添加成功\");\r\n        } else {\r\n          message.warning(data.msg);\r\n        }\r\n      }\r\n    );\r\n    this.setState({\r\n      channel_modal_visible: false,\r\n    });\r\n  };\r\n  handleAddChannelCancel = () => {\r\n    this.setState({\r\n      channel_modal_visible: false,\r\n    });\r\n  };\r\n  // 更新当前视频列表服务器缓存\r\n  listUpdate = () => {\r\n    this.getVideos(\"\", 0, null, null, true);\r\n  };\r\n\r\n  public render() {\r\n    const token = localStorage.getItem(\"token\") || \"\";\r\n    const {\r\n      videos,\r\n      left_drawer_visible,\r\n      channel_list,\r\n      page_title,\r\n      sort,\r\n      add_channel_power,\r\n      current_channel_id,\r\n    } = this.state;\r\n    console.log(add_channel_power);\r\n    const { Meta } = Card;\r\n    const { SubMenu } = Menu;\r\n    if (!token) {\r\n      return <Redirect to=\"/\"></Redirect>;\r\n    }\r\n    let pageHeaderExtra: ReactNode[] = [\r\n      <Button onClick={this.logout} key=\"logout_button\">\r\n        退出\r\n      </Button>,\r\n      <Button onClick={this.onSortChange} key=\"sort_button\">\r\n        {sort ? \"最新\" : \"最早\"}\r\n      </Button>,\r\n      <Button\r\n        type=\"primary\"\r\n        shape=\"circle\"\r\n        icon={<CloudSyncOutlined />}\r\n        onClick={this.listUpdate}\r\n        key=\"update_button\"\r\n      />,\r\n    ];\r\n    if (add_channel_power) {\r\n      pageHeaderExtra.push(\r\n        <Button\r\n          shape=\"circle\"\r\n          onClick={this.handleAddChange}\r\n          key=\"addChange_button\"\r\n        >\r\n          +\r\n        </Button>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <Affix offsetTop={0}>\r\n          <PageHeader\r\n            className=\"site-page-header\"\r\n            onBack={this.showLeftDrawer}\r\n            title={page_title}\r\n            subTitle=\"\"\r\n            ghost={false}\r\n            backIcon={<BarsOutlined />}\r\n            extra={pageHeaderExtra}\r\n          />\r\n        </Affix>\r\n\r\n        <Drawer\r\n          title=\"播放列表\"\r\n          placement=\"left\"\r\n          closable={false}\r\n          onClose={this.hideLeftDrawer}\r\n          visible={left_drawer_visible}\r\n        >\r\n          <Menu\r\n            mode=\"inline\"\r\n            openKeys={[this.state.list_type]}\r\n            onOpenChange={this.handleMenuOpenChange}\r\n            style={{ width: 256 }}\r\n            onClick={this.handleMenuClick}\r\n          >\r\n            <SubMenu\r\n              key=\"list\"\r\n              title={\r\n                <span>\r\n                  <ProfileOutlined />\r\n                  <span>视频列表</span>\r\n                </span>\r\n              }\r\n            >\r\n              {channel_list[\"list\"].map((v, i) => {\r\n                return (\r\n                  <Menu.Item\r\n                    key={v.id}\r\n                    className={\r\n                      current_channel_id === v.id\r\n                        ? \"ant-menu-item-selected\"\r\n                        : \"\"\r\n                    }\r\n                    data-title={v.title}\r\n                  >\r\n                    {v.title}\r\n                  </Menu.Item>\r\n                );\r\n              })}\r\n            </SubMenu>\r\n            <SubMenu\r\n              key=\"channel\"\r\n              title={\r\n                <span>\r\n                  <ReadOutlined />\r\n                  <span>频道列表</span>\r\n                </span>\r\n              }\r\n            >\r\n              {channel_list[\"channel\"].map((v, i) => {\r\n                return (\r\n                  <Menu.Item\r\n                    key={v.id}\r\n                    className={\r\n                      current_channel_id === v.id\r\n                        ? \"ant-menu-item-selected\"\r\n                        : \"\"\r\n                    }\r\n                    data-title={v.title}\r\n                  >\r\n                    {v.title}\r\n                  </Menu.Item>\r\n                );\r\n              })}\r\n            </SubMenu>\r\n          </Menu>\r\n        </Drawer>\r\n        <Row className=\"card_list\" gutter={{ md: 16, xl: 32 }}>\r\n          {videos.map((v, i) => {\r\n            return (\r\n              <Col\r\n                sm={32}\r\n                md={16}\r\n                xl={8}\r\n                className=\"video_card card_margin_bottom\"\r\n                id={\"video_\" + v.id}\r\n                key={i}\r\n              >\r\n                <Card\r\n                  style={{ width: \"100%\" }}\r\n                  cover={<img alt=\"example\" src={v.thumbnail} />}\r\n                  actions={[\r\n                    <Button\r\n                      onClick={() => {\r\n                        this.handlePlayClick(v.id, \"video\", v.title);\r\n                      }}\r\n                      type={this.isPlay(v.id) ? \"dashed\" : \"primary\"}\r\n                    >\r\n                      视频\r\n                    </Button>,\r\n                    <Button\r\n                      onClick={() => {\r\n                        this.handlePlayClick(v.id, \"audio\", v.title);\r\n                      }}\r\n                      type={this.isPlay(v.id) ? \"dashed\" : \"default\"}\r\n                    >\r\n                      音频\r\n                    </Button>,\r\n                  ]}\r\n                >\r\n                  <Meta title={v.title} description={v.created_at} />\r\n                </Card>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n        <Pagination\r\n          current={this.state.page.current}\r\n          onChange={this.onPageChange}\r\n          defaultPageSize={50}\r\n          total={this.state.page.total}\r\n          showSizeChanger={false}\r\n        />\r\n        <BackTop />\r\n        <Modal\r\n          title=\"添加频道\"\r\n          visible={this.state.channel_modal_visible}\r\n          onOk={this.handleAddChannelOk}\r\n          onCancel={this.handleAddChannelCancel}\r\n        >\r\n          <Input\r\n            placeholder=\"输入列表ID\"\r\n            onChange={(event) => {\r\n              this.setState({ add_channel_inpu_id: event.target.value });\r\n            }}\r\n          />\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Video);\r\n","import React, { Component } from \"react\";\nimport \"./style.css\";\nimport { Form, Input, Button, message } from \"antd\";\nimport { get, post } from \"./utils/http\";\nimport { withRouter, Redirect, RouteComponentProps } from \"react-router-dom\";\n\ninterface State {\n  token: string;\n}\n\nclass Login extends Component {\n  state: State = {\n    token: \"\",\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\") || \"\";\n    this.setState({\n      token: token,\n    });\n  }\n  onFinish = (values: any) => {\n    post(\"/token\", { username: values.username })\n      .then((data: any) => {\n        if (data.status) {\n          const token: string = data.data.token;\n          localStorage.setItem(\"token\", token);\n          localStorage.setItem(\"isManager\", data.data.isManager);\n          this.setState({\n            token: token,\n          });\n        } else {\n          message.error(\"错误的用户名\");\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n      });\n  };\n  public render() {\n    const { token } = this.state;\n\n    if (token) {\n      return <Redirect to=\"/Video\"></Redirect>;\n    } else {\n      const layout = {\n        labelCol: { span: 8 },\n        wrapperCol: { span: 16 },\n      };\n      const tailLayout = {\n        wrapperCol: { offset: 8, span: 16 },\n      };\n\n      return (\n        <div className=\"login-page\">\n          <Form\n            {...layout}\n            name=\"basic\"\n            initialValues={{ remember: true }}\n            onFinish={this.onFinish}\n          >\n            <Form.Item\n              label=\"您是？\"\n              name=\"username\"\n              rules={[{ required: true, message: \"输入登录用户名\" }]}\n            >\n              <Input />\n            </Form.Item>\n\n            <Form.Item {...tailLayout}>\n              <Button type=\"primary\" htmlType=\"submit\">\n                好的\n              </Button>\n            </Form.Item>\n          </Form>\n        </div>\n      );\n    }\n  }\n}\n\nexport default Login;\n","import * as React from \"react\";\r\nimport videojs from \"video.js\";\r\n// Styles\r\nimport \"video.js/dist/video-js.css\";\r\n\r\ninterface VideoPlayerPropsInferface extends videojs.PlayerOptions {}\r\n\r\nexport default class VideoPlayer extends React.Component<\r\n  VideoPlayerPropsInferface\r\n> {\r\n  private player?: videojs.Player;\r\n  private videoNode?: HTMLVideoElement;\r\n\r\n  constructor(props: VideoPlayerPropsInferface) {\r\n    super(props);\r\n    this.player = undefined;\r\n    this.videoNode = undefined;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.player = videojs(this.videoNode, this.props).ready(function () {\r\n      // console.log('onPlayerReady', this);\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.player) {\r\n      this.player.dispose();\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"c-player\">\r\n        <div className=\"c-player__screen\" data-vjs-player=\"true\">\r\n          <video\r\n            ref={(node: HTMLVideoElement) => (this.videoNode = node)}\r\n            className=\"video-js vjs-16-9\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport { withRouter, RouteComponentProps } from \"react-router-dom\";\r\nimport VideoPlayer from \"./VideoPlayer\";\r\nimport { Spin, PageHeader, Divider, Typography } from \"antd\";\r\n\r\ninterface State {\r\n  token: string;\r\n  id: string;\r\n  type: string;\r\n  title: string;\r\n  videoOptions: videoJsOptions | any;\r\n}\r\n\r\ninterface videoJsOptionsSources {\r\n  src: string;\r\n  type: string;\r\n}\r\n\r\ninterface videoJsOptions {\r\n  autoplay: boolean;\r\n  controls: boolean;\r\n  sources: videoJsOptionsSources[];\r\n}\r\n\r\ninterface Param extends RouteComponentProps {\r\n  location: any;\r\n}\r\nclass Play extends Component<Param> {\r\n  constructor(props: Param) {\r\n    super(props);\r\n  }\r\n  state: State = {\r\n    token: \"\",\r\n    id: \"\",\r\n    type: \"\",\r\n    title: \"\",\r\n    videoOptions: {},\r\n  };\r\n  player: any;\r\n  componentDidMount() {\r\n    const token = localStorage.getItem(\"token\") || \"\";\r\n    if (this.props.location.state?.id) {\r\n      const { id, type, title } = this.props.location.state;\r\n      let videoType = \"video/mp4\";\r\n      if (type == \"audio\") {\r\n        videoType = \"audio/mp4\";\r\n      }\r\n      this.setState({\r\n        token: token,\r\n        id: id,\r\n        type: type,\r\n        title: title,\r\n        videoOptions: {\r\n          autoplay: true,\r\n          controls: true,\r\n          sources: {\r\n            src: `/api/play?id=${id}&type=${type}&token=${token}`,\r\n            //src: `http://vjs.zencdn.net/v/oceans.mp4`,\r\n            type: videoType,\r\n          },\r\n        },\r\n      });\r\n    } else {\r\n      this.props.history.push(\"/\");\r\n    }\r\n  }\r\n  public render() {\r\n    const { Title } = Typography;\r\n    const { videoOptions, title } = this.state;\r\n    if (videoOptions.sources?.src) {\r\n      return (\r\n        <>\r\n          <div className=\"play-box\">\r\n            <PageHeader\r\n              className=\"site-page-header\"\r\n              onBack={() => this.props.history.goBack()}\r\n              title={title}\r\n            />\r\n            <VideoPlayer {...videoOptions} />\r\n            <Divider />\r\n            <Title level={4} className=\"title\">\r\n              {title}\r\n            </Title>\r\n          </div>\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <>\r\n          <PageHeader\r\n            className=\"site-page-header\"\r\n            onBack={() => this.props.history.goBack()}\r\n            title={title}\r\n          />\r\n          <Spin />\r\n        </>\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default withRouter(Play);\r\n","import React, { Component } from \"react\";\r\nimport { Route, Switch, HashRouter as Router } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport Video from \"./Video\";\r\nimport Play from \"./Play\";\r\n\r\n// export interface Props extends RouteComponentProps<any> {\r\n//   name?: string;\r\n// }\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/Video\" component={Video} />\r\n          <Route path=\"/Play\" component={Play} />\r\n        </Switch>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\n\nimport { BrowserRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}